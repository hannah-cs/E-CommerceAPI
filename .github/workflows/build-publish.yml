name: Build Deploy


# We are triggering the action on any push to git
on:
  push:


# We defined our jobs.
# For simplicity we will use a single job called build
jobs:
  build:
    # We specify what image to use. Can be also Mac or Windows.
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # Step 1: checkout the code from git
      - uses: actions/checkout@v3

      # Step 2: Set up the JVM need to build our application
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      # Step 3: run maven build
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Step 4: login to docker hub using credentials set in github
      # secrets described in previous section
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Set up QEMU in order to be able to run docker daemon
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: github.ref == 'refs/heads/main'

      # Step 6: Set up docker build functionality
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
        if: github.ref == 'refs/heads/main'

      # Step 7: build docker image and push it to docker hub
      - name: Build and push
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          push: true
          tags: <docker hub username>/<app name>:latest

      # Step 8: Authenticate to google cloud
      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
        if: github.ref == 'refs/heads/main'

      # Step 9: Deploy our app to google cloud
      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '<desired service name>'
          flags: '--allow-unauthenticated'
          image: '<docker hub username>/<app name>:latest'
          env_vars: |
            SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver
            SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USER }}
            SPRING_DATASOURCE_URL=${{ secrets.DB_URL }}
        if: github.ref == 'refs/heads/main'